@namespace WiredBrainCoffee.UI.Components
@using WiredBrainCoffee.Models

<div class="card">
    <img src="@MenuItem.ImageFile" />
    <div class="card-body card-info">
        <h5 class="card-title">@MenuItem.Name</h5>
        <p class="card-text">@MenuItem.ShortDescription</p>
    </div>
    <ul class="list-group list-group-flush">
        <li class="list-group-item">Price: @MenuItem.Price.ToString("C")</li>
        </ul>
    <div class="card-body">
        <Button @onclick="(() => OnDetailsCallback.InvokeAsync(MenuItem))" Color="Color.Light">Details</Button>
        <Button @onclick="(() => OnOrderCallback.InvokeAsync(MenuItem))" class="float-end" Color="Color.Success">Add</Button>
    </div>
</div>

@*<div class="card menu-item-card">
  <div class="row g-0">
    <div class="col-md-4">
            <img src="@MenuItem.ImageFile" />
    </div>
    <div class="col-md-8">
      <div class="card-body">
        <h5 class="card-title">@MenuItem.Name</h5>
        <p class="card-text">@MenuItem.ShortDescription</p>
        <p class="card-text card-actions">
            <small class="text-muted">Price: @MenuItem.Price.ToString("C")</small>
            <Button @onclick="(() => OnDetailsCallback.InvokeAsync(MenuItem))" Color="Color.Light">Details</Button>
            <Button @onclick="(() => OnOrderCallback.InvokeAsync(MenuItem))" Color="Color.Success">Add to Order</Button>
        </p>
        
      </div>
    </div>
  </div>
</div>*@


@code {
    [Parameter]
    public MenuItem MenuItem { get; set; } = new MenuItem();

    [Parameter]
    public EventCallback<MenuItem> OnOrderCallback { get; set; }

    [Parameter]
    public EventCallback<MenuItem> OnDetailsCallback { get; set; }
}
